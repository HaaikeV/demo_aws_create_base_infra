# tasks file for roles/aws_all_in_one_go
- name: Setting the correct AMI per us-east-1
  set_fact:
    aws_ami_image_id: ami-0f88c5923d28f345b
  when: aws_region == "us-east-1"   

- name: Setting the correct AMI per us-east-1
  set_fact:
    aws_ami_image_id: ami-09d9c5cdcfb8fc655
  when: aws_region == "us-west-1"   

- name: Create VPC 
  ec2_vpc_net:
    name: "{{ aws_vpc_name }}"
    cidr_block: "{{ aws_vpc_cidr }}"
    region: "{{ aws_region }}"
    tags:
      name: "{{ aws_vpc_name }}"
      environment: "{{ aws_environment_identifier }}"
  register: my_vpc  

- name: Create VPC subnet and attach to "{{ my_vpc.vpc.id }}"
  ec2_vpc_subnet:
    vpc_id: "{{ my_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    state: present
    cidr: "{{ aws_vpc_cidr }}"
    resource_tags:
        environment: "{{ aws_environment_identifier }}"
  register: my_vpc_subnet  

- name: Create a security group
  ec2_group:
    state: present
    name: "{{ aws_security_group_name }}"
    description: this is a security group for ansible
    region: "{{ aws_region }}"
    vpc_id: "{{ my_vpc.vpc.id }}"
    tags:
      name: "{{ aws_security_group_name }}"
      environment: "{{ aws_environment_identifier }}"
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0
#      - proto: all
#        group_name: ansible
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: firewall

#- name: Create an EC2 instance
#  ec2:
#    id: "{{ aws_ec2_instance_name }}"
#    key_name: test
#    region: "{{ aws_region }}"
#    group_id: "{{ firewall.group_id }}"
#    instance_type: "{{ aws_instance_type }}"
#    image: "{{ aws_ami_image_id }}"
#    wait: yes
#    instance_tags:
#      instance_name: "{{ aws_ec2_instance_name }}"
#      environment: "{{ aws_environment_identifier }}"
#      operating_system: "{{ aws_os_type }}"
#      ami_id: "{{ aws_ami_image_id }}"
#      group: "{{ firewall.group_id }}"
#    vpc_subnet_id: "{{ my_vpc_subnet.subnet.id }}"
#    assign_public_ip: yes
#    monitoring: yes
#  register: ec2